@page "/usuario"
@page "/usuario/{Id:int}"

@inject IUsuarioServicio usuarioServicio
@inject IToastService toastService
@inject NavigationManager navigationManager

@attribute [Authorize(Roles = "Administrador")];

<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@Titulo</p>
</div>
<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">
        <EditForm Model="modelo" OnValidSubmit="GuardarCambios">

            @* para ctivar la validacion de mensajes *@
            <DataAnnotationsValidator></DataAnnotationsValidator>

            <div class="input-group">
                <span class="input-group-text bg-light" id="basic-addon3">Nombre Completo</span>
                @* @bind-value para activar el required de cada dto *@
                <input type="text" class="form-control" @bind-value="modelo.Nombre">
            </div>
            <ValidationMessage For="@(()=>modelo.Nombre)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Correo</span>
                <input type="text" class="form-control" @bind-value="modelo.Correo"><br />
            </div>
            <ValidationMessage For="@(()=>modelo.Correo)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Contraseña</span>
                <input type="password" class="form-control" @bind-value="modelo.Clave">
            </div>
            <ValidationMessage For="@(()=>modelo.Clave)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Confirmar Contraseña</span>
                <input type="password" class="form-control" @bind-value="modelo.ConfirmarClave">
            </div>
            <ValidationMessage For="@(()=>modelo.ConfirmarClave)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@Boton</button>
                <a href="/usuarios" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    //para recibir el parametro Id
    [Parameter]
    public int Id { get; set; }

    private string Titulo = "Nuevo Usuario";
    private string Boton = "Crear";

    private UsuarioDTO modelo = new UsuarioDTO();

    //metodo de recibir los parametros
    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            Titulo = "Editar Usuario";
            Boton = "Actualizar";

            //utilizando servicio usuario para obtener la informacion de usuario
            var response = await usuarioServicio.Obtener(Id);

            if (response.Ok!)
            {
                //almacenando la informacion en modelo
                modelo = (UsuarioDTO)response.Resultado!;
                modelo.ConfirmarClave = modelo.Clave;
            }
            else
            {
                toastService.ShowWarning(response.Message);
            }
        }
    }

    //metodo para guardar cambios (crear o editar)
    private async Task GuardarCambios()
    {
        if (modelo.Clave != modelo.ConfirmarClave)
        {
            toastService.ShowWarning("Las contraseñas no coinciden, por favor intentalo nuevamente");
            return;
        }

        bool ok = true;
        string message = string.Empty;

        if (Id != 0)
        {
            var response = await usuarioServicio.Editar(modelo);

            if (response.Ok)
            {
                message = "Usuario modificado con éxito";
            }
            else
            {
                ok = false;
                message = "No se pudo editar el usuario, intenta nuevamente";
            }
        }
        else
        {
            modelo.Rol = "Administrador";
            var response = await usuarioServicio.Crear(modelo);

            if (response.Ok)
            {
                message = "Usuario creado con éxito";
            }
            else
            {
                ok = false;
                message = "No se pudo crear el usuario, intenta nuevamente";
            }
        }

        if (ok)
        {
            toastService.ShowSuccess(message);
            navigationManager.NavigateTo("/usuarios");
        }
        else
        {
            toastService.ShowSuccess(message);
        }
    }
}
